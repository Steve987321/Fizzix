# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=release
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
RESCOMP = windres
INCLUDES += -I../../../Steve987321/Engine2D/Engine/src -I../vendor -I../vendor/imgui -I../vendor/SFML-2.6.0/include -I../vendor/json/include -Isrc -Isrc/assets
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += -framework OpenGL -framework Cocoa -framework IOKit -framework CoreVideo -lEngine -lsfml-system -lsfml-window -lsfml-graphics -lsfml-audio
LDDEPS +=
ALL_LDFLAGS += $(LDFLAGS) -L../../../Steve987321/Engine2D/bin/Release-macosx-x86_64 -L../vendor/SFML-2.6.0/lib -m64 -dynamiclib -Wl,-install_name,@rpath/libSpaceShip_Game.dylib
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),release)
TARGETDIR = ../bin/Release-macosx-x86_64
TARGET = $(TARGETDIR)/libSpaceShip_Game.dylib
OBJDIR = ../bin-intermediate/Release-macosx-x86_64
DEFINES += -DNDEBUG -D_USRDLL -DGAME_IS_EXPORT
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -std=c++20

else ifeq ($(config),debug)
TARGETDIR = ../bin/Debug-macosx-x86_64
TARGET = $(TARGETDIR)/libSpaceShip_Game.dylib
OBJDIR = ../bin-intermediate/Debug-macosx-x86_64
DEFINES += -D_DEBUG -DGAME_IS_EXPORT
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -fPIC -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -fPIC -g -std=c++20

else ifeq ($(config),dev)
TARGETDIR = ../bin/Dev-macosx-x86_64
TARGET = $(TARGETDIR)/libSpaceShip_Game.dylib
OBJDIR = ../bin-intermediate/Dev-macosx-x86_64
DEFINES += -DNDEBUG -D_USRDLL -DGAME_IS_EXPORT -DTOAD_EDITOR
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -std=c++20

else ifeq ($(config),devdebug)
TARGETDIR = ../bin/DevDebug-macosx-x86_64
TARGET = $(TARGETDIR)/libSpaceShip_Game.dylib
OBJDIR = ../bin-intermediate/DevDebug-macosx-x86_64
DEFINES += -D_DEBUG -DGAME_IS_EXPORT -DTOAD_EDITOR
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -fPIC -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -fPIC -g -std=c++20

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/CPPBinding.o
GENERATED += $(OBJDIR)/CarEnvironment.o
GENERATED += $(OBJDIR)/Compiler.o
GENERATED += $(OBJDIR)/FZFrame.o
GENERATED += $(OBJDIR)/FZPolygon.o
GENERATED += $(OBJDIR)/FZRigidbody.o
GENERATED += $(OBJDIR)/FZSim.o
GENERATED += $(OBJDIR)/FZSpring.o
GENERATED += $(OBJDIR)/FZThruster.o
GENERATED += $(OBJDIR)/Framework.o
GENERATED += $(OBJDIR)/Game.o
GENERATED += $(OBJDIR)/IO.o
GENERATED += $(OBJDIR)/Lexer.o
GENERATED += $(OBJDIR)/Parser.o
GENERATED += $(OBJDIR)/PhysGun.o
GENERATED += $(OBJDIR)/PhysObj.o
GENERATED += $(OBJDIR)/RocketEnvironment.o
GENERATED += $(OBJDIR)/ScriptRegister.o
GENERATED += $(OBJDIR)/Sim.o
GENERATED += $(OBJDIR)/SimLib.o
GENERATED += $(OBJDIR)/TVM.o
GENERATED += $(OBJDIR)/Thruster.o
GENERATED += $(OBJDIR)/imgui-SFML.o
GENERATED += $(OBJDIR)/imgui.o
GENERATED += $(OBJDIR)/imgui_demo.o
GENERATED += $(OBJDIR)/imgui_draw.o
GENERATED += $(OBJDIR)/imgui_tables.o
GENERATED += $(OBJDIR)/imgui_widgets.o
OBJECTS += $(OBJDIR)/CPPBinding.o
OBJECTS += $(OBJDIR)/CarEnvironment.o
OBJECTS += $(OBJDIR)/Compiler.o
OBJECTS += $(OBJDIR)/FZFrame.o
OBJECTS += $(OBJDIR)/FZPolygon.o
OBJECTS += $(OBJDIR)/FZRigidbody.o
OBJECTS += $(OBJDIR)/FZSim.o
OBJECTS += $(OBJDIR)/FZSpring.o
OBJECTS += $(OBJDIR)/FZThruster.o
OBJECTS += $(OBJDIR)/Framework.o
OBJECTS += $(OBJDIR)/Game.o
OBJECTS += $(OBJDIR)/IO.o
OBJECTS += $(OBJDIR)/Lexer.o
OBJECTS += $(OBJDIR)/Parser.o
OBJECTS += $(OBJDIR)/PhysGun.o
OBJECTS += $(OBJDIR)/PhysObj.o
OBJECTS += $(OBJDIR)/RocketEnvironment.o
OBJECTS += $(OBJDIR)/ScriptRegister.o
OBJECTS += $(OBJDIR)/Sim.o
OBJECTS += $(OBJDIR)/SimLib.o
OBJECTS += $(OBJDIR)/TVM.o
OBJECTS += $(OBJDIR)/Thruster.o
OBJECTS += $(OBJDIR)/imgui-SFML.o
OBJECTS += $(OBJDIR)/imgui.o
OBJECTS += $(OBJDIR)/imgui_demo.o
OBJECTS += $(OBJDIR)/imgui_draw.o
OBJECTS += $(OBJDIR)/imgui_tables.o
OBJECTS += $(OBJDIR)/imgui_widgets.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking SpaceShip_Game
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning SpaceShip_Game
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/imgui.o: ../vendor/imgui/imgui.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_demo.o: ../vendor/imgui/imgui_demo.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_draw.o: ../vendor/imgui/imgui_draw.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_tables.o: ../vendor/imgui/imgui_tables.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_widgets.o: ../vendor/imgui/imgui_widgets.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui-SFML.o: ../vendor/sfml-imgui/imgui-SFML.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FZFrame.o: src/assets/Fizzix/FZFrame.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FZPolygon.o: src/assets/Fizzix/FZPolygon.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FZRigidbody.o: src/assets/Fizzix/FZRigidbody.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FZSim.o: src/assets/Fizzix/FZSim.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FZSpring.o: src/assets/Fizzix/FZSpring.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FZThruster.o: src/assets/Fizzix/FZThruster.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PhysGun.o: src/assets/PhysGameObj/PhysGun.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PhysObj.o: src/assets/PhysGameObj/PhysObj.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CarEnvironment.o: src/assets/SimEnvironments/CarEnvironment.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RocketEnvironment.o: src/assets/SimEnvironments/RocketEnvironment.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Compiler.o: src/assets/Toot/Compiler/Compiler.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Lexer.o: src/assets/Toot/Compiler/Lexer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Parser.o: src/assets/Toot/Compiler/Parser.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CPPBinding.o: src/assets/Toot/TVM/Lib/CPPBinding.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/IO.o: src/assets/Toot/TVM/Lib/IO.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SimLib.o: src/assets/Toot/TVM/Lib/SimLib.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TVM.o: src/assets/Toot/TVM/TVM.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Framework.o: src/assets/framework/Framework.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Sim.o: src/assets/scripts/Sim.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Thruster.o: src/assets/scripts/Thruster.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Game.o: src/game_core/Game.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ScriptRegister.o: src/game_core/ScriptRegister.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif